#include <iostream>
#include <string>
#include <unistd.h>
#include <cstdlib>

#include "ParticleBox.hpp"

#define PRECISION double

int main (int argc, char *argv[])
{
  
  if (argc < 3)
    {
      std::cout << "Usage:" << std::endl;
      std::cout << " " << argv[0] << " <nsteps> -i <input file> (optional) -o <outputfile> " << std::endl;
      return 1;
    }

  std::string inputfile = "random";
  std::string outputfile = "solout.dat";
  
  int nsteps = std::stoi(argv[1]);
  if (nsteps < 0)
    {
      std::cerr << "number of steps specified as " << argv[1] << " cannot be negative!" << std::endl;
      return 1;
    }
  
  int c;
  opterr = 0;
  while ((c = getopt (argc, argv, "i:o:")) != -1)
    {   
      switch (c)
	{
	case 'i':
	  if (optarg)
	    {
	      inputfile = optarg;
	    }
	  break;
	case 'o':
	  if (optarg)
	    {
	      outputfile = optarg;
	    }
	  break;
	default:
	  abort ();
	}
    }

  if (inputfile == "random")
    {
      unsigned int N = 64;
      PRECISION L = (PRECISION) 4.2323167;
      PRECISION T0 = (PRECISION) 0.728;
      PRECISION M = (PRECISION) 48.0;

      ParticleBox<PRECISION> PB(N,L,T0,M);
      PB.Solve(nsteps);
      PB.WriteData("data/" + outputfile);
    }
  else
    {
      ParticleBox<PRECISION> PB("data/" + inputfile);
      PB.Solve(nsteps);
      PB.WriteData("data/" + outputfile);
    }  
  
  return 0;
}

